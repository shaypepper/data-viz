{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/pages/happy/quanitifedSelfLayout.js"],"names":["Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","textAlign","to","color","textDecoration","defaultProps","Layout","children","styles","data","site","siteMetadata","title","Object","assign","paddingTop","Date","getFullYear","href","QuantifiedSelfLayout","id"],"mappings":"uJAIMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,4BACEC,MAAO,CACLC,WAAW,gBACXC,aAAa,YAGf,yBACEF,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAGV,wBAAIL,MAAO,CAAEG,OAAQ,EAAGG,UAAW,UACjC,kBAAC,OAAD,CACEC,GAAG,IACHP,MAAO,CACLQ,MAAM,QACNC,eAAe,SAGhBV,OAWXD,EAAOY,aAAe,CACpBX,UAAU,IAGGD,QC3BTa,G,UAAS,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OACpBC,EAAI,OAUV,OACE,oCACE,kBAAC,EAAD,CAAQf,UAAWe,EAAKC,KAAKC,aAAaC,QAC1C,yBACEjB,MAAOkB,OAAOC,OACZ,CACEhB,OAAO,SACPC,SAAU,KACVC,QAAQ,wBACRe,WAAY,GAEdP,IAGF,8BAAOD,GACP,sCACK,IAAIS,MAAOC,cADhB,mBAGE,uBAAGC,KAAK,4BAAR,eAYVZ,EAAOD,aAAe,CACpBV,MAAO,MAGMW,O,6IC3Df,oEAuDea,UAzCc,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAC9B,OACE,kBAAC,IAAD,KACE,yBAAKa,GAAG,0BACN,oDACA,w4BAeA,2JAIA,wFACA,yBAAKA,GAAG,cACN,kBAAC,OAAD,CAAMlB,GAAG,cAAT,2BACA,kBAAC,OAAD,CAAMA,GAAG,gBAAT,gCACA,kBAAC,OAAD,CAAMA,GAAG,mBAAT,0BAEF,6BACCK","file":"component---src-pages-happy-quanitifed-self-layout-js-6d87e8f1e39ee375b17e.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0, textAlign: \"right\" }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children, styles }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={Object.assign(\n          {\n            margin: `0 auto`,\n            maxWidth: 1040,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          },\n          styles\n        )}\n      >\n        <main>{children}</main>\n        <footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  style: PropTypes.shape(),\n}\n\nLayout.defaultProps = {\n  style: null,\n}\n\nexport default Layout\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nimport \"./happy.css\"\nimport Layout from \"../../components/layout\"\n\nconst QuantifiedSelfLayout = ({ children }) => {\n  return (\n    <Layout>\n      <div id=\"quantified-self-layout\">\n        <h1>Quantified self: Joy</h1>\n        <p>\n          When I began working on this project, I had some fear that I wouldn't\n          like what I saw in my data, whichever data I chose. Unlike my peers, I\n          had no interest in self-accountability. So I began with a topic: Joy.\n          What are the things that make me happy in everyday life? The things\n          that make an eh day not so eh? Where do I look to keep my spirits\n          buoyed? It didn't take long to figure it out. During my workday, it's\n          my happy playlist (creatively titled The Happiest Playlist). It starts\n          with Barbra Streisand and doesn't lose steam after that. I also have a\n          particularly wonderful shoe collection, so I always have the option to\n          just look down if I want to smile. At the end of my day I come home to\n          my very pretty dog, Mousse. She is hilarious and sweet and a delight\n          to come home to. She usually greets me with a wagging tail that moves\n          her whole body and a toy as a gift.\n        </p>\n        <p>\n          I was smiling the entire time I was putting these together. I hope the\n          visualizations can bring you a little bit of joy too.\n        </p>\n        <p>Click the buttons below to toggle between visualizations.</p>\n        <div id=\"happy-list\">\n          <Link to=\"/happy/dog\">The Happiest Dog Photos</Link>\n          <Link to=\"/happy/shoes\">The Happiest Shoe Collection</Link>\n          <Link to=\"/happy/playlist\">The Happiest Playlist</Link>\n        </div>\n        <hr />\n        {children}\n      </div>\n    </Layout>\n  )\n}\n\nQuantifiedSelfLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default QuantifiedSelfLayout\n"],"sourceRoot":""}